*********************유저생성*********************
--유저 생성--
CREATE USER  JEWELRY IDENTIFIED BY 1234;

--유저권한--
GRANT CONNECT,DBA,RESOURCE TO JEWELRY;


*********************쥬얼리 테이블*********************

--회원 테이블--
CREATE TABLE MEMBER(
    MEM_NUM NUMBER NOT NULL PRIMARY KEY, --회원번호
    MEM_ID VARCHAR2(20) NOT NULL, --아이디
    MEM_PWD VARCHAR2(20) NOT NULL, -- 비밀번호
    MEM_NAME VARCHAR2(20) NOT NULL, -- 이름
    MEM_NICK VARCHAR2(100) NOT NULL, -- 닉네임
    MEM_EMAIL VARCHAR2(100)  , -- 이메일
    MEM_PHONE VARCHAR2(50) , -- 연락처
    MEM_ADDR1 VARCHAR2(15) NOT NULL, -- 주소1
    MEM_ADDR2 VARCHAR2(500) NOT NULL, --주소2
    MEM_RANK VARCHAR2(15) NOT NULL,-- 등급
    MEM_JOINDATE DATE DEFAULT SYSDATE NOT NULL, -- 가입일
    MEM_DEL_GB CHAR(2) DEFAULT 'N' NOT NULL , --탈퇴여부
    MEM_POINT NUMBER DEFAULT 0 NOT NULL , -- 포인트
    MEM_STACK VARCHAR2(300) DEFAULT 0 NOT NULL,--누적금액
    MEM_ADMIN CHAR(1) DEFAULT 'M' NOT NULL  --어드민
);

--상품--
CREATE TABLE ITEM(
    ITEM_NUM VARCHAR2(20) NOT NULL PRIMARY KEY, --상품번호
    ITEM_TYPE CHAR(1) NOT NULL, --카테고리종류
    ITEM_NAME VARCHAR2(100) NOT NULL, --이름
    ITEM_PRICE NUMBER NOT NULL, --가격
    ITEM_DCP NUMBER DEFAULT 0, --할인률
    ITEM_IMAGE1 VARCHAR2(100) NOT NULL, --이미지1
    ITEM_IMAGE2 VARCHAR2(4000) NOT NULL, --이미지2
    ITEM_DATE DATE DEFAULT SYSDATE NOT NULL, --등록일
    ITEM_STOCK NUMBER NOT NULL --재고
);


--상품 옵션 항목--
CREATE TABLE ITEM_OPTION(
    OP_NUM NUMBER NOT NULL PRIMARY KEY, --상품번호
    ITEM_NUM VARCHAR2(20) NOT NULL,
    OP_PRICE NUMBER DEFAULT 0 NOT NULL, --가격
    OP_TYPE VARCHAR2(20) NOT NULL, --옵션종류
    OP_VALUE VARCHAR2(50) NOT NULL, --옵션값
    CONSTRAINT FK_OP_ITEM_NUM  FOREIGN KEY(ITEM_NUM) REFERENCES ITEM(ITEM_NUM) ON DELETE CASCADE
);




--포인트 관리--

CREATE TABLE POINTS(
    PO_NUM NUMBER NOT NULL,--포인트번호
    MEM_ID VARCHAR2(200) NOT NULL,--회원아이디
    PO_POINT VARCHAR2(200) ,--포인트 값
    PO_DATE DATE ,--포인트 변경날짜
    PO_WHY VARCHAR2(200),----포인트 내용
    PO_RESULT NUMBER,----포인트 적용 결과값
    CONSTRAINT PK_PO_NUM PRIMARY KEY(PO_NUM)

);

--장바구니--imp_084518136150
CREATE TABLE CART(
 CART_NUM NUMBER NOT NULL PRIMARY KEY, -- 장바구니 번호
 MEM_ID VARCHAR2(40)  ,
 ITEM_NUM VARCHAR2(20) NOT NULL,
 CART_CNT NUMBER NOT NULL, --수량
 OP_VALUE VARCHAR2(500) NOT NULL, --옵션
ITEM_OP_PRICE NUMBER NOT NULL,--가격
 CONSTRAINT FK_CART_ITEM_NUM FOREIGN KEY(ITEM_NUM) REFERENCES ITEM(ITEM_NUM) ON DELETE CASCADE
);

--찜--
CREATE TABLE JJIM(
    JJIM_NUM NUMBER NOT NULL PRIMARY KEY,-- 찜번호
    ITEM_NUM VARCHAR2(20) NOT NULL ,--상품번호
    MEM_NUM NUMBER NOT NULL--회원번호

);

--1대1문의--
CREATE TABLE QNA(
    QNA_NUM NUMBER NOT NULL PRIMARY KEY,-- 질문글 번호
    MEM_ID VARCHAR2(20) ,--회원 ID
    QNA_TITLE VARCHAR2(100) NOT NULL,-- 질문제목
    QNA_CONTENT VARCHAR2(1000) NOT NULL,-- 질문내용
    QNA_DATE DATE DEFAULT SYSDATE,--질문날짜
    QNA_RTITLE VARCHAR2(100),--답변제목
    QNA_RCONTENT VARCHAR2(1000),--답변내용
    QNA_RDATE DATE,--답변날짜
    QNA_RSTATE CHAR(1) DEFAULT 'N' NOT NULL,--답변상태
    QNA_PWD VARCHAR2(20),--비밀번호
    ITEM_NUM VARCHAR2(20),--상품번호
    QNA_CATE VARCHAR2(30) NOT NULL,--QNA카테고리
    QNA_NAME VARCHAR2(20),--질문자이름
    CONSTRAINT FK_QNA_ITEM_NUM FOREIGN KEY(ITEM_NUM) REFERENCES ITEM(ITEM_NUM) ON DELETE CASCADE
    
);
--자주묻는 질문--
CREATE TABLE FAQ(
    FAQ_NUM NUMBER NOT NULL PRIMARY KEY, -- 글번호
    FAQ_CONTENT VARCHAR2(2000) NOT NULL, -- 글내용
    FAQ_TITLE VARCHAR2(100) NOT NULL, -- 글제목
    FAQ_CATE VARCHAR2(20) NOT NULL --카테고리

    
);
--공지사항--
CREATE TABLE NOTICE(
    NT_NUM NUMBER NOT NULL PRIMARY KEY, --순번
    NT_TITLE VARCHAR2(100) NOT NULL, --제목
    NT_CONTENT VARCHAR2(4000) NOT NULL, --내용
    NT_DATE DATE DEFAULT SYSDATE NOT NULL, --날짜
    NT_TYPE VARCHAR2(13) NOT NULL --공지유형
);
--차단목록--
CREATE TABLE IGNORE(
    MEM_NUM NUMBER NOT NULL , --회원번호
    IG_DATE DATE NOT NULL, -- 차단날짜
    IG_MEM_ID VARCHAR2(20) NOT NULL, -- 회원 아이디
    IG_WHY VARCHAR2(50),
    CONSTRAINT FK_IG_MEM_NUM FOREIGN KEY(MEM_NUM) REFERENCES MEMBER(MEM_NUM) ON DELETE CASCADE
);

--리뷰--
CREATE TABLE REVIEW(
    RE_NUM NUMBER NOT NULL PRIMARY KEY, --글번호
    ITEM_NUM VARCHAR2(20) NOT NULL, --상품번호
    RE_TITLE VARCHAR2(100) NOT NULL, --글제목
    RE_CONTENT VARCHAR2(4000) NOT NULL, --글내용
    RE_HIT NUMBER NOT NULL , --조회수
    RE_DATE DATE DEFAULT SYSDATE NOT NULL, -- 등록일
    RE_LIKE VARCHAR2(5) NOT NULL,--평점
    MEM_NUM NUMBER NOT NULL,
    DEL_GB CHAR(1) DEFAULT 'N' NOT NULL,
    OR_UNQ NUMBER NOT NULL,
    CONSTRAINT FK_RE_ITEM_NUM FOREIGN KEY(ITEM_NUM) REFERENCES ITEM(ITEM_NUM) ON DELETE CASCADE,
    CONSTRAINT FK_RE_OR_UNQ FOREIGN KEY(OR_UNQ) REFERENCES ORDERS(OR_UNQ) ON DELETE CASCADE
    
    );
    
--댓글--
CREATE TABLE COMMENTS(
    CO_NUM NUMBER NOT NULL PRIMARY KEY , --글 번호
    RE_NUM NUMBER NOT NULL , --리뷰 번호
    CO_CONTENT VARCHAR2(4000) NOT NULL , -- 글 내용
    CO_DATE DATE DEFAULT SYSDATE NOT NULL, --등록일
    MEM_NUM NUMBER NOT NULL,
    CONSTRAINT FK_CO_RE_NUM FOREIGN KEY(RE_NUM) REFERENCES REVIEW(RE_NUM) ON DELETE CASCADE,
    CONSTRAINT FK_CO_MEM_NUM FOREIGN KEY(MEM_NUM) REFERENCES MEMBER(MEM_NUM) ON DELETE CASCADE	

); 

--주문 테이블--
CREATE TABLE ORDERS(
    OR_UNQ NUMBER NOT NULL PRIMARY KEY ,	
    OR_NUM NUMBER NOT NULL , --주문번호
    MEM_NUM NUMBER , --회원번호
    ITEM_NUM VARCHAR2(20) NOT NULL , --상품번호
    OR_NAME VARCHAR2(20) NOT NULL , --수령인 이름
    OR_PHONE VARCHAR2(20) NOT NULL , --수령인 연락처
    OR_CNT NUMBER NOT NULL, --수량
    OR_USEP NUMBER DEFAULT 0 NOT NULL , --사용 포인트
    OR_DCM NUMBER DEFAULT 0 NOT NULL, --관리자할인금액
    OR_OGP NUMBER NOT NULL, --원가
    OR_FP NUMBER NOT NULL, --최종 결제금액
    OR_DATE DATE DEFAULT SYSDATE NOT NULL, --결제 날짜
    OR_PWD VARCHAR2(20), --비회원 비밀번호
    OR_HOW VARCHAR2(20) NOT NULL, --결제수단
    OR_RE VARCHAR2(1000) , --배송 요청사항
    OR_OP VARCHAR2(1000) , --옵션
    OR_RCHECK CHAR DEFAULT 'N' NOT NULL, --리뷰 작성여부
    OR_ADDR1 VARCHAR2(20) , -- 수령인 주소1
    OR_ADDR2 VARCHAR2(50), --수령인 주소2
    CONSTRAINT FK_ORDER_MEM_NUM FOREIGN KEY(MEM_NUM) REFERENCES MEMBER(MEM_NUM) ON DELETE CASCADE,
    CONSTRAINT FK_ORDER_ITEM_NUM FOREIGN KEY(ITEM_NUM) REFERENCES ITEM(ITEM_NUM) ON DELETE CASCADE
  
);

--주문배송관리--
CREATE TABLE DELIVERY(
    DEL_NUM NUMBER NOT NULL PRIMARY KEY, --배송관리 번호
    OR_UNQ NUMBER NOT NULL ,
    DEL_DATE DATE,--날짜
    OR_NUM NUMBER NOT NULL , --주문번호
    DEL_DS VARCHAR2(20) DEFAULT '결제완료' NOT NULL ,--배송상태
    CONSTRAINT FK_DEL_OR_UNQ FOREIGN KEY(OR_UNQ) REFERENCES ORDERS(OR_UNQ) ON DELETE CASCADE
);


--이벤트--
CREATE TABLE EVENT(
    ET_NUM NUMBER NOT NULL PRIMARY KEY, --이벤트 번호
    ET_TITLE VARCHAR2(50) NOT NULL, --이벤트 제목
    ET_CONTENT VARCHAR2(4000) NOT NULL, --이벤트 내용
    ET_SD DATE NOT NULL, --이벤트 시작일
    ET_FD DATE NOT NULL --이벤트 종료일
);


*********************테이블 코멘트*********************




--회원 코멘트--
COMMENT ON TABLE MEMBER IS '회원';
COMMENT ON COLUMN MEMBER.MEM_NUM IS '회원번호';
COMMENT ON COLUMN MEMBER.MEM_ID IS '아이디';
COMMENT ON COLUMN MEMBER.MEM_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEM_NAME IS '이름';
COMMENT ON COLUMN MEMBER.MEM_NICK IS '닉네임';
COMMENT ON COLUMN MEMBER.MEM_EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.MEM_PHONE IS '연락처';
COMMENT ON COLUMN MEMBER.MEM_RANK IS '등급';
COMMENT ON COLUMN MEMBER.MEM_JOINDATE IS '가입일';
COMMENT ON COLUMN MEMBER.MEM_DEL_GB IS '탈퇴여부';
COMMENT ON COLUMN MEMBER.MEM_POINT IS '포인트';
COMMENT ON COLUMN MEMBER.MEM_STACK IS '누적금액';
COMMENT ON COLUMN MEMBER.MEM_ADMIN IS 'ADMIN';
COMMENT ON COLUMN MEMBER.MEM_ADDR1 IS '주소1';
COMMENT ON COLUMN MEMBER.MEM_ADDR2 IS '주소2';



--상품 코멘트--
COMMENT ON TABLE ITEM IS '상품';
COMMENT ON COLUMN ITEM.ITEM_NUM IS '상품번호';
COMMENT ON COLUMN ITEM.ITEM_TYPE IS '카테고리 종류';
COMMENT ON COLUMN ITEM.ITEM_NAME IS '이름';
COMMENT ON COLUMN ITEM.ITEM_PRICE IS '가격';
COMMENT ON COLUMN ITEM.ITEM_DCP IS '할인률';
COMMENT ON COLUMN ITEM.ITEM_IMAGE1 IS '이미지1';
COMMENT ON COLUMN ITEM.ITEM_IMAGE2 IS '이미지2';
COMMENT ON COLUMN ITEM.ITEM_DATE IS '등록일';
COMMENT ON COLUMN ITEM.ITEM_STOCK IS '재고';

--상품 옵션 코멘트--
COMMENT ON TABLE ITEM_OPTION IS '상품옵션';
COMMENT ON COLUMN ITEM_OPTION.OP_NUM IS '상품옵션번호';
COMMENT ON COLUMN ITEM_OPTION.ITEM_NUM IS '상품번호';
COMMENT ON COLUMN ITEM_OPTION.OP_PRICE IS '가격';
COMMENT ON COLUMN ITEM_OPTION.OP_TYPE IS '옵션종류';
COMMENT ON COLUMN ITEM_OPTION.OP_VALUE IS '옵션값';

--포인트관리 코멘트--
COMMENT ON TABLE POINTS IS '포인트 관리';
COMMENT ON COLUMN POINTS.PO_NUM IS '포인트 번호';
COMMENT ON COLUMN POINTS.MEM_ID IS '회원 아이디';
COMMENT ON COLUMN POINTS.PO_POINT IS '포인트값';
COMMENT ON COLUMN POINTS.PO_DATE IS '포인트변경날짜';
COMMENT ON COLUMN POINTS.PO_WHY IS '포인트 내용';
COMMENT ON COLUMN POINTS.PO_RESULT IS '포인트 적용 결과값';


--장바구니 코멘트--
COMMENT ON TABLE CART IS '장바구니';
COMMENT ON COLUMN CART.CART_NUM IS '장바구니번호';
COMMENT ON COLUMN CART.MEM_NUM IS '회원번호';
COMMENT ON COLUMN CART.ITEM_NUM IS '상품번호';
COMMENT ON COLUMN CART.CART_CNT IS '수량';

--찜 코멘트--
COMMENT ON TABLE JJIM IS '찜';
COMMENT ON COLUMN JJIM.JJIM_NUM IS '찜번호';
COMMENT ON COLUMN JJIM.ITEM_NUM IS '상품번호';
COMMENT ON COLUMN JJIM.MEM_NUM IS '회원번호';

--QNA 코멘트--
COMMENT ON TABLE QNA IS '1대1문의';
COMMENT ON COLUMN QNA.QNA_NUM IS 'QNA번호';
COMMENT ON COLUMN QNA.MEM_ID IS '회원ID';
COMMENT ON COLUMN QNA.QNA_TITLE IS '질문제목';
COMMENT ON COLUMN QNA.QNA_CONTENT IS '질문내용';
COMMENT ON COLUMN QNA.QNA_DATE IS '질문날짜';
COMMENT ON COLUMN QNA.QNA_RTITLE IS '답변제목';
COMMENT ON COLUMN QNA.QNA_RCONTENT IS '답변내용';
COMMENT ON COLUMN QNA.QNA_RDATE IS '답변날짜';
COMMENT ON COLUMN QNA.QNA_RSTATE IS '답변상태';
COMMENT ON COLUMN QNA.QNA_PWD IS '비밀번호';
COMMENT ON COLUMN QNA.ITEM_NUM IS '상품번호';
COMMENT ON COLUMN QNA.QNA_CATE IS '카테고리';
COMMENT ON COLUMN QNA.QNA_NAME IS '질문자이름';
--FAQ 코멘트--
COMMENT ON TABLE FAQ IS '자주묻는질문';
COMMENT ON COLUMN FAQ.FAQ_NUM IS '글번호';
COMMENT ON COLUMN FAQ.FAQ_CONTENT IS '글내용';
COMMENT ON COLUMN FAQ.FAQ_TITLE IS '글제목';
COMMENT ON COLUMN FAQ.FAQ_CATE IS '카테고리';

--차단목록 코멘트--
COMMENT ON TABLE IGNORE IS '차단목록';
COMMENT ON COLUMN IGNORE.MEM_NUM IS '회원번호';
COMMENT ON COLUMN IGNORE.IG_DATE IS '차단날짜';
COMMENT ON COLUMN IGNORE.IG_MEM_ID IS '회원아이디';
COMMENT ON COLUMN IGNORE.IG_WHY IS '차단사유';

--리뷰 코멘트--
COMMENT ON TABLE REVIEW IS '리뷰';
COMMENT ON COLUMN REVIEW.RE_NUM IS '글번호';
COMMENT ON COLUMN REVIEW.ITEM_NUM IS '상품번호';
COMMENT ON COLUMN REVIEW.RE_TITLE IS '글제목';
COMMENT ON COLUMN REVIEW.RE_CONTENT IS '글내용';
COMMENT ON COLUMN REVIEW.RE_HIT IS '조회수';
COMMENT ON COLUMN REVIEW.RE_DATE IS '등록일';

--댓글 코멘트--
COMMENT ON TABLE COMMENTS IS '댓글';
COMMENT ON COLUMN COMMENTS.CO_NUM IS '글번호';
COMMENT ON COLUMN COMMENTS.RE_NUM IS '리뷰번호';
COMMENT ON COLUMN COMMENTS.CO_CONTENT IS '글내용';
COMMENT ON COLUMN COMMENTS.CO_DATE IS '등록일';

--주문 테이블 코멘트--
COMMENT ON TABLE ORDERS IS '주문상태';
COMMENT ON COLUMN ORDERS.OR_NUM IS '주문번호';
COMMENT ON COLUMN ORDERS.MEM_NUM IS '회원번호';
COMMENT ON COLUMN ORDERS.ITEM_NUM IS '상품번호';
COMMENT ON COLUMN ORDERS.OR_NAME IS '수령인이름';
COMMENT ON COLUMN ORDERS.OR_PHONE IS '수령인연락처';
COMMENT ON COLUMN ORDERS.OR_CNT IS '수량';
COMMENT ON COLUMN ORDERS.OR_USEP IS '사용포인트';
COMMENT ON COLUMN ORDERS.OR_DCM IS '관리자할인금액';
COMMENT ON COLUMN ORDERS.OR_OGP IS '원가';
COMMENT ON COLUMN ORDERS.OR_FP IS '최종결제금액';
COMMENT ON COLUMN ORDERS.OR_DATE IS '결제날짜';
COMMENT ON COLUMN ORDERS.OR_PWD IS '비회원 비밀번호';
COMMENT ON COLUMN ORDERS.OR_HOW IS '결제수단';
COMMENT ON COLUMN ORDERS.OR_RE IS '배송 요청사항';
COMMENT ON COLUMN ORDERS.OR_OP IS '옵션';
COMMENT ON COLUMN ORDERS.OR_RCHECK IS '리뷰작성여부';
COMMENT ON COLUMN ORDERS.OR_ADDR1 IS '수령인주소1';
COMMENT ON COLUMN ORDERS.OR_ADDR2 IS '수령인주소2';

--배송관리 코멘트--
COMMENT ON TABLE DELIVERY IS '배송관리';
COMMENT ON COLUMN DELIVERY.DEL_NUM IS '배송관리번호';
COMMENT ON COLUMN DELIVERY.OR_NUM IS '주문번호';
COMMENT ON COLUMN DELIVERY.ITEM_NUM IS '상품번호';
COMMENT ON COLUMN DELIVERY.DEL_DATE IS '날짜';
COMMENT ON COLUMN DELIVERY.DEL_DS IS '배송상태';

--이벤트 코멘트--
COMMENT ON TABLE EVENT IS '이벤트';
COMMENT ON COLUMN EVENT.ET_NUM IS '이벤트번호';
COMMENT ON COLUMN EVENT.ET_TITLE IS '이벤트제목';
COMMENT ON COLUMN EVENT.ET_CONTENT IS '이벤트내용';
COMMENT ON COLUMN EVENT.ET_SD IS '이벤트시작일';
COMMENT ON COLUMN EVENT.ET_FD IS '이벤트종료일';

--공지사항 코멘트--
COMMENT ON TABLE NOTICE IS '공지사항';
COMMENT ON COLUMN NOTICE.NT_NUM IS '공지사항번호';
COMMENT ON COLUMN NOTICE.NT_TITLE IS '공지사항제목';
COMMENT ON COLUMN NOTICE.NT_CONTENT IS '공지사항내용';
COMMENT ON COLUMN NOTICE.NT_DATE IS '등록일';
COMMENT ON COLUMN NOTICE.NT_TYPE IS '공지유형';



*********************시퀀스*********************
--회원 번호--
CREATE SEQUENCE MEM_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--상품 번호--
CREATE SEQUENCE ITEM_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--옵션 번호--
CREATE SEQUENCE ITEM_OPTION_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--포인트 번호--
CREATE SEQUENCE PO_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--장바구니 번호--
CREATE SEQUENCE CART_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--찜 번호--
CREATE SEQUENCE JJIM_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--QNA 번호--
CREATE SEQUENCE QNA_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--FAQ 번호--
CREATE SEQUENCE FAQ_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--공지사항 번호--
CREATE SEQUENCE NT_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--리뷰 번호--
CREATE SEQUENCE RE_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--댓글 번호--
CREATE SEQUENCE CO_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--주문테이블 번호--
CREATE SEQUENCE OR_UNQ_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--배송관리--

CREATE SEQUENCE DEL_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;

--이벤트 번호--
CREATE SEQUENCE ET_NUM_SEQ
 START WITH 0
 INCREMENT BY 1
 NOMAXVALUE
 MINVALUE 0
NOCYCLE;


************************프로시저&JOB스케줄러****************************

 --------------프로시저--------------
    create or replace PROCEDURE DELIVERY_proc
    IS
      vn_delivery delivery%rowtype;
      cursor c1
      is
      select * from delivery where DEL_DS='배송완료';
    BEGIN
        for vn_delivery in c1 loop
            exit when c1%notfound;
            if(TO_CHAR(vn_delivery.DEL_DATE+8,'YYYY_MM_DD')=TO_CHAR(sysdate,'YYYY_MM_DD')) then
                insert into delivery values(DEL_NUM_SEQ.NEXTVAL,vn_delivery.OR_UNQ,SYSDATE,vn_delivery.OR_NUM,'구매확정');
            end if;
        end loop;
      COMMIT;

    EXCEPTION WHEN OTHERS THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
    END;
    /
    
    --------------JOB--------------
     DECLARE
      v_job_no NUMBER;
    BEGIN
      -- 현재 시간 기준 하루한번 프로시저를 실행하는 잡 등록
      DBMS_JOB.SUBMIT  ( job => v_job_no, 
                         what => 'DELIVERY_proc;',
                         next_date => SYSDATE,
                         interval => 'TRUNC(SYSDATE+1)' );         -- 하루한번 12시마다 동작

      COMMIT;

      -- 시스템에서 자동 생성된 잡 번호 출력
      DBMS_OUTPUT.PUT_LINE('v_job_no : ' || v_job_no);
    END;
    /
