<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
<select id="selectitemList" parameterType="hashmap" resultType="hashmap">
select * from(SELECT rownum as RNUM,s.* 
 from  (SELECT ITEM_NUM,ITEM_TYPE,ITEM_NAME,ITEM_PRICE,ITEM_DCP,ITEM_IMAGE1,ITEM_IMAGE2,ITEM_DATE,ITEM_STOCK
 FROM ITEM 
 <choose>
				
				   	 <when test="keyword!=null and keyword!=''">	
				   	 Where  
				   	 ITEM_NAME like '%' || #{keyword} ||'%'
				   	 </when> 
		   	 </choose>
 
 
 
 order by ITEM_NUM desc)s) 
 <![CDATA[WHERE RNUM >= #{START_NUM} AND RNUM <= #{END_NUM}]]>
 
	</select>
	<select id="getTotalList" parameterType="hashmap" resultType="int">
		SELECT 
			COUNT(*)as TOTAL 
		FROM 
			ITEM 
			<choose>
				
				   	 <when test="keyword!=null and keyword!=''">	
				   	 Where  
				   	 ITEM_NAME like '%' || #{keyword} ||'%'
				   	 </when> 
		   	 </choose>
	
	</select>
	
	<select id="selectOptionList" parameterType="hashmap" resultType="hashmap">
		select 
			OP_NUM,OP_VALUE,OP_TYPE,OP_PRICE
		FROM 
			ITEM_OPTION
		WHERE
			 ITEM_NUM=#{ITEM_NUM}
	
	</select>
	<select id="selectItemDetail" parameterType="hashmap" resultType="hashmap">
			SELECT 
				ITEM_NUM,ITEM_TYPE,ITEM_NAME,ITEM_PRICE,ITEM_DCP,ITEM_IMAGE1,ITEM_IMAGE2,ITEM_DATE,ITEM_STOCK
			FROM 
				ITEM
			WHERE 
				ITEM_NUM=#{ITEM_NUM}
	</select>
	<select id="selectItemNum" parameterType="hashmap" resultType="String">
	select #{ITEM_TYPE} || nvl2(max(s.item_type),LPAD(MAX(to_number(LTRIM(SUBSTR(s.ITEM_NUM,2,3),0)))+1,3,0),'001')n from(select item_type,item_num  from item where ITEM_TYPE=#{ITEM_TYPE})s	


	</select>
	
	<insert id="insertItemWrite" parameterType="hashmap" >
		INSERT INTO ITEM 
			VALUES(#{ITEM_NUM}
			,#{ITEM_TYPE},#{ITEM_NAME},#{ITEM_PRICE},#{ITEM_DCP},#{ITEM_IMAGE1},#{ITEM_IMAGE2},SYSDATE,#{ITEM_STOCK} )
	 
	</insert>
	<insert id="insertOption" parameterType="hashmap" >
		INSERT INTO ITEM_OPTION (OP_NUM,ITEM_NUM,OP_PRICE,OP_TYPE,OP_VALUE) VALUES(ITEM_OPTION_NUM_SEQ.NEXTVAL,#{ITEM_NUM},#{OP_PRICE},#{OP_TYPE},#{OP_VALUE})
	</insert>
	
	<update id="updateItemModify" parameterType="hashmap">
	UPDATE ITEM 
		SET ITEM_NAME=#{ITEM_NAME},ITEM_PRICE=#{ITEM_PRICE},ITEM_DCP=#{ITEM_DCP},ITEM_IMAGE1=#{ITEM_IMAGE1},ITEM_IMAGE2=#{ITEM_IMAGE2},ITEM_DATE=SYSDATE,ITEM_STOCK=#{ITEM_STOCK}
 	WHERE ITEM_NUM=#{ITEM_NUM}
  
	</update>
	<update id="deleteItem" parameterType="hashmap">
	DELETE 
		FROM ITEM 
		WHERE ITEM_NUM=#{ITEM_NUM}
	
	</update>
	<select id="selectQnAList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		select * from(SELECT rownum as RNUM,s.* FROM 
		(SELECT  QNA_NUM,MEM_ID,CASE WHEN LENGTH(QNA_TITLE)>=10 THEN SUBSTR(QNA_TITLE,1,10)||'...' ELSE QNA_TITLE END QNA_TITLE,TO_CHAR(QNA_DATE,'YYYY-MM-DD') QNA_DATE,QNA_RTITLE,QNA_RCONTENT,QNA_RDATE,QNA_RSTATE,QNA_PWD,ITEM_NUM,QNA_CATE
    FROM QNA
		ORDER BY
			 QNA_RSTATE,QNA_DATE)S) WHERE RNUM >= #{START_NUM} AND RNUM <= #{END_NUM}]]>
	</select>
	
	<select id="qnaTotalList" parameterType="hashmap" resultType="int">
	SELECT COUNT(*)AS TOTAL
FROM QNA
	</select>
	
	<select id="selectQnADetail" parameterType="hashmap" resultType="hashmap">
			SELECT  
				QNA_NUM,MEM_ID,QNA_TITLE,QNA_CONTENT,QNA_DATE,QNA_RTITLE,QNA_RCONTENT,QNA_RDATE,QNA_RSTATE,QNA_PWD,ITEM_NUM,QNA_CATE,QNA_NAME
			FROM 
				QnA
			WHERE 
				QNA_NUM=#{QNA_NUM}
	</select>
	
	
	<update id="qnaReply" parameterType="hashmap">
		UPDATE 
			QNA 
		SET 
			QNA_RTITLE=#{QNA_RTITLE}, QNA_RCONTENT=#{QNA_RCONTENT}, QNA_RDATE=SYSDATE, QNA_RSTATE='Y' 
		WHERE 
			QNA_NUM=#{QNA_NUM}
  
	</update>
	<update id="qnaReplyDelete" parameterType="hashmap">
		UPDATE 
			QNA
		 SET 
		 	QNA_RTITLE='', QNA_RCONTENT='', QNA_RDATE='', QNA_RSTATE='N'
		 WHERE 
		 	QNA_NUM=#{QNA_NUM}
	
	</update>
	<update id="deleteQnA" parameterType="hashmap">
	DELETE FROM QNA 
		WHERE QNA_NUM=#{QNA_NUM}
	
	</update>
	<select id="selectDaySaleList" parameterType="hashmap" resultType="hashmap">
	SELECT O.ITEM_NUM,i.item_name  AS ITEM_NAME,SUM(O.OR_CNT) as CNT  FROM ORDERS O,ITEM I WHERE OR_DATE=#{OR_DATE} AND O.ITEM_NUM=I.ITEM_NUM
GROUP BY O.ITEM_NUM,I.ITEM_NAME order by CNT desc
	</select>
	<select id="selectMonthSaleList" parameterType="hashmap" resultType="hashmap">
	SELECT O.ITEM_NUM,I.ITEM_NAME AS ITEM_NAME,SUM(O.OR_CNT) as cnt  FROM ORDERS O,ITEM I
WHERE TO_CHAR(OR_DATE,'YYYY-MM')=#{OR_DATE}  AND  O.ITEM_NUM=I.ITEM_NUM
GROUP BY O.ITEM_NUM,I.ITEM_NAME order by CNT desc
	</select>
	<select id="selectCateDaySaleList" parameterType="hashmap" resultType="hashmap">
		SELECT SUBSTR(ITEM_NUM,1,1) CATEGORY,SUM(OR_CNT) CNT  FROM ORDERS WHERE TO_CHAR(OR_DATE,'YYYY-MM-DD')=#{OR_DATE}
GROUP BY SUBSTR(ITEM_NUM,1,1) order by CNT desc
	</select>
	<select id="selectCateMonthSaleList" parameterType="hashmap" resultType="hashmap">
SELECT SUBSTR(ITEM_NUM,1,1) CATEGORY,SUM(OR_CNT) CNT  FROM ORDERS WHERE TO_CHAR(OR_DATE,'YYYY-MM')=#{OR_DATE}
GROUP BY SUBSTR(ITEM_NUM,1,1) order by CNT desc
	</select>
	
	<select id="selectIgnoreList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
select * from(SELECT rownum as RNUM,s.* 
 from 
(SELECT MEM_NUM,TO_CHAR(IG_DATE,'YYYY-MM-DD') IG_DATE,IG_MEM_ID,IG_WHY
FROM IGNORE)S) WHERE RNUM>=#{START_NUM} AND RNUM<=#{END_NUM}
 ]]>
	</select>
	<select id="IgnoreTotalList" parameterType="hashmap" resultType="int">
	SELECT COUNT(*)AS TOTAL
FROM IGNORE
	</select>
	<select id="selectIgnoreDetail" parameterType="hashmap" resultType="hashmap">
	SELECT 
		MEM_NUM,TO_CHAR(IG_DATE,'YYYY-MM-DD') IG_DATE,IG_MEM_ID,IG_WHY
	FROM 
		IGNORE
	WHERE 
		MEM_NUM=#{MEM_NUM}
	</select>
	<update id="deleteIgnore" parameterType="hashmap">
	DELETE 	FROM 
		IGNORE 
	WHERE 
		MEM_NUM=#{MEM_NUM}

	
	</update>
<select id="selectNoticeList" parameterType="hashmap" resultType="hashmap">
 <![CDATA[
SELECT *FROM (SELECT rownum as RNUM,s.*  FROM(SELECT NT_NUM,NT_TITLE,NT_CONTENT,TO_CHAR(NT_DATE,'YYYY-MM-DD') NT_DATE,NT_TYPE
 FROM NOTICE)S) WHERE RNUM>=#{START_NUM} AND RNUM<=#{END_NUM}
]]>
 
	</select>
	<select id="noticeTotalList" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) TOTAL
		FROM NOTICE
	
	</select>
	
	
	<select id="selectNoticeDetail" parameterType="hashmap" resultType="hashmap">
			SELECT  NT_NUM,NT_TITLE,NT_CONTENT,TO_CHAR(NT_DATE,'YYYY-MM-DD') NT_DATE,NT_TYPE
FROM NOTICE
WHERE NT_NUM=#{NT_NUM}
	</select>
	
	<insert id="insertNoticeWrite" parameterType="hashmap" >
		INSERT INTO NOTICE VALUES(NT_NUM_SEQ.NEXTVAL,#{NT_TITLE},#{NT_CONTENT},SYSDATE,#{NT_TYPE})
	 
	</insert>
	<update id="updateNoticeModify" parameterType="hashmap">
	UPDATE NOTICE SET NT_TITLE=#{NT_TITLE},NT_CONTENT=#{NT_CONTENT},NT_DATE=SYSDATE,NT_TYPE=#{NT_TYPE} WHERE NT_NUM=#{NT_NUM}
  
	</update>
	<update id="deleteNotice" parameterType="hashmap">
	DELETE FROM NOTICE WHERE NT_NUM=#{NT_NUM}
	
	</update>	


<select id="selectEventList" parameterType="hashmap" resultType="hashmap">
 <![CDATA[
SELECT *FROM (SELECT rownum as RNUM,s.*  FROM(SELECT ET_NUM,ET_TITLE,ET_CONTENT,TO_CHAR(ET_SD,'YYYY-MM-DD')ET_SD,TO_CHAR(ET_FD,'YYYY-MM-DD')ET_FD 
FROM EVENT)S) WHERE RNUM>=#{START_NUM} AND RNUM<=#{END_NUM}
]]>
 
	</select>
	<select id="eventTotalList" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) TOTAL
FROM EVENT
	
	</select>
	
	
	<select id="selectEventDetail" parameterType="hashmap" resultType="hashmap">

SELECT ET_NUM,ET_TITLE,ET_CONTENT,TO_CHAR(ET_SD,'YYYY-MM-DD')ET_SD,TO_CHAR(ET_FD,'YYYY-MM-DD')ET_FD 
FROM EVENT
WHERE ET_NUM=#{ET_NUM}
	</select>
	
	<insert id="insertEventWrite" parameterType="hashmap" >
		INSERT INTO EVENT VALUES(ET_NUM_SEQ.NEXTVAL,#{ET_TITLE},#{ET_CONTENT},#{ET_SD},#{ET_FD})
	 
	</insert>
	<update id="updateEventModify" parameterType="hashmap">
	UPDATE EVENT SET ET_TITLE=#{ET_TITLE},ET_CONTENT=#{ET_CONTENT},ET_SD=#{ET_SD},ET_FD=#{ET_FD} WHERE ET_NUM=#{ET_NUM}
  
	</update>
	<update id="deleteEvent" parameterType="hashmap">
	DELETE FROM EVENT WHERE ET_NUM=#{ET_NUM}
	
	</update>		
	
	<select id="selectFaqList" parameterType="hashmap" resultType="hashmap">
 <![CDATA[
SELECT *FROM (SELECT rownum as RNUM,s.*  FROM(SELECT  FAQ_NUM,FAQ_CONTENT,FAQ_TITLE,FAQ_CATE
FROM FAQ)S) WHERE RNUM>=#{START_NUM} AND RNUM<=#{END_NUM} 
]]>
 
	</select>
	<select id="faqTotalList" parameterType="hashmap" resultType="int">

SELECT  COUNT(*) TOTAL
FROM FAQ
	</select>
	
	
	<select id="selectFaqDetail" parameterType="hashmap" resultType="hashmap">

SELECT FAQ_NUM,FAQ_CONTENT,FAQ_TITLE,FAQ_CATE
FROM FAQ
WHERE FAQ_NUM=#{FAQ_NUM}
	</select>
	
	<insert id="insertFaqWrite" parameterType="hashmap" >
		INSERT INTO FAQ VALUES(FAQ_NUM_SEQ.NEXTVAL,#{FAQ_CONTENT},#{FAQ_TITLE},#{FAQ_CATE})
	 
	</insert>
	<update id="updateFaqModify" parameterType="hashmap">
	UPDATE FAQ SET FAQ_TITLE=#{FAQ_TITLE},FAQ_CONTENT=#{FAQ_CONTENT},FAQ_CATE=#{FAQ_CATE} WHERE FAQ_NUM=#{FAQ_NUM}
  
	</update>
	<update id="deleteFaq" parameterType="hashmap">
	DELETE FROM FAQ WHERE FAQ_NUM=#{FAQ_NUM}
	
	</update>		
	
	<select id="selectMemberList" parameterType="hashmap" resultType="hashmap">

SELECT *FROM (SELECT rownum as RNUM,s.*  FROM(SELECT MEM_NUM,MEM_ID,MEM_NAME,MEM_NICK,MEM_EMAIL,MEM_PHONE,MEM_ADDR1,MEM_ADDR2,MEM_RANK,TO_CHAR(MEM_JOINDATE,'YYYY-MM-DD') MEM_JOINDATE,MEM_POINT,MEM_STACK
 FROM MEMBER
WHERE MEM_DEL_GB='N'
<choose>
				
				   	 <when test="keyword!=null and keyword!=''">	
				   	  AND 
				   	 MEM_ID like '%' || #{keyword} ||'%'
				   	 </when> 
		   	 </choose>



)S)

 <![CDATA[ WHERE RNUM>=#{START_NUM} AND RNUM<=#{END_NUM} 
]]>
 
	</select>
	<select id="memberTotalList" parameterType="hashmap" resultType="int">

SELECT  COUNT(*) TOTAL
FROM MEMBER
<choose>
				
				   	 <when test="keyword!=null and keyword!=''">	
				   	 Where  
				   	 MEM_ID like '%' || #{keyword} ||'%'
				   	 </when> 
		   	 </choose>
	</select>
	
	
	<select id="selectMemberDetail" parameterType="hashmap" resultType="hashmap">
SELECT MEM_NUM,MEM_ID,MEM_NAME,MEM_NICK,MEM_EMAIL,MEM_PHONE,MEM_ADDR1,MEM_ADDR2,MEM_RANK,TO_CHAR(MEM_JOINDATE,'YYYY-MM-DD') MEM_JOINDATE,MEM_POINT,MEM_STACK
FROM MEMBER 
WHERE MEM_NUM=#{MEM_NUM}
	</select>
	
	
	<update id="ignoreMember" parameterType="hashmap">
	INSERT INTO IGNORE VALUES(#{MEM_NUM},SYSDATE,#{MEM_ID},#{IG_WHY})
  
	</update>
	<update id="deleteMember" parameterType="hashmap">
	UPDATE MEMBER
SET MEM_DEL_GB='Y' 
WHERE  MEM_NUM=#{MEM_NUM}
	
	</update>		
	<update id="updateMemberPoint" parameterType="hashmap">
	UPDATE MEMBER
	<choose>
		<when test="PO_TYPE==1">	 
				   SET MEM_POINT=(TO_NUMBER(#{MEM_POINT})+TO_NUMBER(#{PO_POINT}))
		</when>
		<when test="PO_TYPE==2">	
				   	SET MEM_POINT=(TO_NUMBER(#{MEM_POINT})-TO_NUMBER(#{PO_POINT}))
		</when>
	</choose>
	,MEM_RANK=#{MEM_RANK} 
	WHERE  MEM_NUM=#{MEM_NUM}
	
	</update>
	
	<insert id="insertPoint" parameterType="hashmap">
	insert into POINTS VALUES(PO_NUM_SEQ.nextval,#{MEM_ID},
	<choose>
		<when test="PO_TYPE==1">	 
				   	('+'||#{PO_POINT})
		</when>
		<when test="PO_TYPE==2">	
				   	('-'||#{PO_POINT})
		</when>
	</choose>
	
	,sysdate,#{PO_WHY},
	
	<choose>
		<when test="PO_TYPE==1">	 
				   (TO_NUMBER(#{MEM_POINT})+TO_NUMBER(#{PO_POINT}))
		</when>
		<when test="PO_TYPE==2">	
				   	(TO_NUMBER(#{MEM_POINT})-TO_NUMBER(#{PO_POINT}))
		</when>
	</choose>
	
	
	
	
	
	
	)
	
	</insert>
	<update id="deleteOption" parameterType="hashmap">
	Delete
	FROM 
		ITEM_OPTION
	WHERE 
		ITEM_NUM=#{ITEM_NUM}
	
	</update>		
	<select id="selectNormalList" parameterType="hashmap" resultType="hashmap">
<![CDATA[select * from(SELECT rownum as RNUM,s.* 
 from  (SELECT DEL_NUM,OR_UNQ,TO_CHAR(DEL_DATE,'YYYY-MM-DD') DEL_DATE,OR_NUM,DEL_DS   FROM DELIVERY WHERE DEL_NUM IN(SELECT MAX(DEL_NUM) FROM delivery GROUP BY OR_UNQ) AND NOT delivery.del_ds IN(select delivery.del_ds FROM DELIVERY WHERE DEL_NUM IN(SELECT MAX(DEL_NUM) FROM delivery GROUP BY OR_UNQ) AND delivery.del_ds LIKE '교환%' OR delivery.del_ds LIKE '반품%' OR delivery.del_ds LIKE '취소%' ) 
ORDER BY DEL_NUM desc)s) 
 WHERE RNUM >= #{START_NUM} AND RNUM <= #{END_NUM}]]>
 
	</select>
	<select id="selectRefundList" parameterType="hashmap" resultType="hashmap">
 <![CDATA[select * from(SELECT rownum as RNUM,s.* 
 from  (SELECT  DEL_NUM,OR_UNQ,TO_CHAR(DEL_DATE,'YYYY-MM-DD') DEL_DATE,OR_NUM,DEL_DS    FROM DELIVERY WHERE DEL_NUM IN(SELECT MAX(DEL_NUM) FROM delivery GROUP BY OR_UNQ) AND delivery.del_ds IN(select delivery.del_ds FROM DELIVERY WHERE DEL_NUM IN(SELECT MAX(DEL_NUM) FROM delivery GROUP BY OR_UNQ) AND delivery.del_ds LIKE '교환%' OR delivery.del_ds LIKE '반품%' OR delivery.del_ds LIKE '취소%') 
ORDER BY DEL_NUM desc)s) 
WHERE RNUM >= #{START_NUM} AND RNUM <= #{END_NUM}]]>
 
	</select>
	<select id="selectDeliveryDetail" parameterType="hashmap" resultType="hashmap">
SELECT  DEL_NUM,OR_UNQ,TO_CHAR(DEL_DATE,'YYYY-MM-DD') DEL_DATE,OR_NUM,DEL_DS    FROM DELIVERY WHERE DEL_NUM=#{DEL_NUM} 

	</select>
	<update id="updateDelivery" parameterType="hashmap">
	insert into delivery(del_num,or_unq,del_date,or_num,del_ds)
	select DEL_NUM_SEQ.nextval,or_unq,sysdate,or_num,#{DEL_DS} from delivery 
	
		
				   	 WHERE OR_UNQ=#{OR_UNQ} and DEL_NUM=(select max(DEL_NUM) from delivery where OR_UNQ=#{OR_UNQ})
		
	
	
	
	
	</update>
	<update id="deleteRefund" parameterType="hashmap">
	DELETE FROM ORDERS WHERE OR_NUM=#{OR_NUM} AND ITEM_NUM=#{ITEM_NUM}
	
	</update>	
	<select id="normalTotalList" parameterType="hashmap" resultType="int">

SELECT  COUNT(*) TOTAL
FROM delivery
WHERE DEL_NUM IN(SELECT MAX(DEL_NUM) FROM delivery GROUP BY OR_UNQ) AND NOT delivery.del_ds IN(select delivery.del_ds FROM DELIVERY WHERE DEL_NUM IN(SELECT MAX(DEL_NUM) FROM delivery GROUP BY OR_UNQ) AND delivery.del_ds LIKE '교환%' OR delivery.del_ds LIKE '반품%' OR delivery.del_ds LIKE '취소%')
	</select>
	<select id="refundTotalList" parameterType="hashmap" resultType="int">

SELECT  COUNT(*) TOTAL
FROM delivery
WHERE DEL_NUM IN(SELECT MAX(DEL_NUM) FROM delivery GROUP BY OR_UNQ) AND delivery.del_ds IN(select delivery.del_ds FROM DELIVERY WHERE DEL_NUM IN(SELECT MAX(DEL_NUM) FROM delivery GROUP BY OR_UNQ) AND delivery.del_ds LIKE '교환%' OR delivery.del_ds LIKE '반품%' OR delivery.del_ds LIKE '취소%' )
	</select>
	<select id="selectOrder"	parameterType="hashmap" resultType="int">
	SELECT count(*) cnt FROM ORDERS WHERE TO_CHAR(OR_DATE,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
	</select>
	<select id="selectQnA"	parameterType="hashmap" resultType="int">
	select count(*)cnt from QNA where qna_rstate='N'
	</select>
	<select id="selectMember"	parameterType="hashmap" resultType="int">
	select count(*)cnt from member where  TO_CHAR(mem_joindate,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
	</select>
	<select id="selectRefund" parameterType="hashmap" resultType="int">
	select count(*)cnt from delivery where  del_ds like '교환신청' or del_ds like '반품신청'
	</select>
	<select id="selectWeek" parameterType="hashmap" resultType="hashmap">
		<![CDATA[SELECT 
TO_CHAR(A.CUR_DATE,'YYYY-MM-DD')AS w1,
TO_CHAR(A.CUR_DATE+1,'YYYY-MM-DD')AS w2,
TO_CHAR(A.CUR_DATE+2,'YYYY-MM-DD')AS w3,
TO_CHAR(A.CUR_DATE+3,'YYYY-MM-DD')AS w4,
TO_CHAR(A.CUR_DATE+4,'YYYY-MM-DD')AS w5,
TO_CHAR(A.CUR_DATE+5,'YYYY-MM-DD')AS w6,
TO_CHAR(A.CUR_DATE+6,'YYYY-MM-DD')AS w7
FROM(SELECT SYSDATE-(TO_NUMBER(TO_CHAR(SYSDATE,'D'))-1)AS CUR_DATE FROM DUAL)A]]>
	</select>
	<select id="selectSaleCnt" parameterType="String" resultType="int">
	select nvl(SUM(OR_CNT),0) as CNT from orders where OR_DATE=to_date(TO_CHAR(#{value}),'YYYY-MM-DD')
	</select>
</mapper>